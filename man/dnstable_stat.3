'\" t
.\"     Title: dnstable_stat
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 12/20/2023
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "DNSTABLE_STAT" "3" "12/20/2023" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
dnstable_stat \- dnstable stat objects
.SH "SYNOPSIS"
.sp
\fB#include <dnstable\&.h>\fR
.sp
.nf
\fBtypedef enum {
        DNSTABLE_STAT_STAGE_FILTER_FILESET,
        DNSTABLE_STAT_STAGE_FILTER_SINGLE_LABEL,
        DNSTABLE_STAT_STAGE_FILTER_RRTYPE,
        DNSTABLE_STAT_STAGE_FILTER_BAILIWICK,
        DNSTABLE_STAT_STAGE_FILTER_TIME_PREFILTER,
        DNSTABLE_STAT_STAGE_REMOVE_STRICT,
        DNSTABLE_STAT_STAGE_FILL_MERGER,
        DNSTABLE_STAT_STAGE_LJOIN,
        DNSTABLE_STAT_STAGE_FILTER_TIME,
        DNSTABLE_STAT_STAGE_FILTER_OFFSET,
} dnstable_stat_stage;\fR
.fi
.sp
.nf
\fBtypedef enum {
        DNSTABLE_STAT_CATEGORY_FILTERED,
        DNSTABLE_STAT_CATEGORY_MERGED,
        DNSTABLE_STAT_CATEGORY_SEEK,
        DNSTABLE_STAT_CATEGORY_FILES,
} dnstable_stat_category;\fR
.fi
.sp
.nf
\fBconst char *
dnstable_stat_stage_to_str(dnstable_stat_stage);\fR
.fi
.sp
.nf
\fBdnstable_res
dnstable_stat_str_to_stage(const char *stage, dnstable_stat_stage *res);\fR
.fi
.sp
.nf
\fBconst char *
dnstable_stat_category_to_str(dnstable_stat_category);\fR
.fi
.sp
.nf
\fBdnstable_res
dnstable_stat_str_to_category(const char *category, dnstable_stat_category *res);\fR
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
The functions ^dnstable_stat_stage_to_str^() and ^dnstable_stat_str_to_stage^() facilitate conversion between ^dnstable_stat_stage^ values and human\-readable
strings, while ^dnstable_stat_category_to_str^() and ^dnstable_stat_str_to_category^() convert between ^dnstable_stat_category^ values and human\-readable
strings\&.
.fi
.if n \{\
.RE
.\}
.SH "RETURN VALUE"
.sp
.if n \{\
.RS 4
.\}
.nf
Both ^dnstable_stat_stage_to_str^() and ^dnstable_stat_category_to_str^() return string representations of the respective stage or category on success, or NULL
on failure\&. Likewise, ^dnstable_stat_str_to_stage^() and ^dnstable_stat_str_to_category^() will return a value of ^dnstable_res_success^ on success and will set
the value of res accordingly, or will simply return ^dnstable_res_failure^ upon failure\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
\fBdnstable_iter\fR(3)
