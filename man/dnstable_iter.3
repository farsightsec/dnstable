'\" t
.\"     Title: dnstable_iter
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/20/2023
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "DNSTABLE_ITER" "3" "12/20/2023" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
dnstable_iter \- iterate over a sequence of dnstable entries
.SH "SYNOPSIS"
.sp
\fB#include <dnstable\&.h>\fR
.sp
.nf
\fBdnstable_res
dnstable_iter_next(struct dnstable_iter *\fR\fB\fIit\fR\fR\fB, struct dnstable_entry **\fR\fB\fIent\fR\fR\fB);\fR
.fi
.sp
.nf
\fBdnstable_res
dnstable_iter_get_count(struct dnstable_iter *\fR\fB\fIit\fR\fR\fB, dnstable_stat_stage \fR\fB\fIstage\fR\fR\fB,
                        dnstable_stat_category \fR\fB\fIcategory\fR\fR\fB, bool *\fR\fB\fIexists\fR\fR\fB, uint64_t *\fR\fB\fIcount\fR\fR\fB);\fR
.fi
.sp
.nf
\fBvoid
dnstable_iter_set_stat_func(struct dnstable_iter *\fR\fB\fIit\fR\fR\fB, dnstable_iter_stat_func \fR\fB\fIstat_func\fR\fR\fB);\fR
.fi
.sp
.nf
\fBdnstable_iter_destroy(struct dnstable_iter **\fR\fB\fIit\fR\fR\fB);\fR
.fi
.SH "DESCRIPTION"
.sp
The \fBdnstable_iter\fR interface is used to return a sequence of one or more dnstable entries\&. Once the caller obtains a \fBdnstable_iter\fR object, \fBdnstable_iter_next\fR() should be repeatedly called on it until there are no more entries to retrieve, at which point the iterator object must be freed by calling \fBdnstable_iter_destroy\fR()\&.
.sp
Query statistics are available through \fBdnstable_iter_get_count\fR(), which returns \fBdnstable_res_success\fR for a valid count \fIcategory\fR and a valid processing \fIstage\fR, with *\fIexists\fR set to \fBfalse\fR if no such category is supported for the given stage \fIstage\fR\&. \fBdnstable_res_failure\fR is returned upon a query for an unknown stage, an unknown category, or if \fIcount\fR is \fBNULL\fR\&.
.SH "RETURN VALUE"
.sp
\fBdnstable_iter_next\fR() returns \fBdnstable_res_success\fR if an entry was successfully retrieved, in which case \fIent\fR will point to a \fBdnstable_entry\fR object which must be freed by the caller using \fBdnstable_entry_destroy\fR()\&. \fBdnstable_res_failure\fR is returned if there are no more entries in the sequence\&.
.SH "SEE ALSO"
.sp
\fBdnstable_entry\fR(3) \fBdnstable_stat\fR(3)
