#!/bin/sh

convert() {
	if [ "$1" = "-d" ]; then
		grep -v '^#' | jq -Mc .
		return
	fi
	grep -v '^#' | jq -Mc . | nmsgtool -j - -w test-dns-$$.nmsg
	rm test-dns.mtbl
	dnstable_convert test-dns-$$.nmsg \
			 test-dns.mtbl \
			 scratch-dnssec.mtbl
	rm test-dns-$$.nmsg
}

convert $* <<EOF
#
# Name and number space breakdown for test data. Use
# this, and keep names (both owner and rdata) and
# addresses within these ranges and name spaces to
# avoid breaking existing tests.
#
#	dns:	*.example.com   	core tests
#		*.next_ip.dom		next_ip tests
#		*.next_ip		next_ip tests
#		*.sl			single-label tests
#		*.sl.dom		single-label tests
#		*.sl.top.dom		single-label tests
#
#	ip4:	198.51.100.0/24 	core tests
#		192.168.1.0/24		next_ip tests
#		255.255.255.255/32	next_ip tests
#
#	ip6:	2001:c00::/23   	core tests
#		c0a8:0100::/24		next_ip tests
#		ffff:ffff:0100::/40	next_ip tests
#
#	SRV,MX pref: 	  10		core tests
#
# Data:
# -----
#
# --------------
# Core test data
# --------------
#
# Simple NS record. Used to test rrset search, rdata
# name search *.example.com
#
{
  "time": "2021-10-06 21:34:53.214684000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "example.com.",
    "rrclass": "IN",
    "rrtype": "NS",
    "rdata": [
      "ns1.example.com.",
      "ns2.example.com."
    ]
  }
}
#
# SOA record with hidden master. hidden-master.example.com
# does not appear in any other rdata value or as an rrset
# owner name.
#
# Used to test that SOA MNAME names are indexed correctly.
#
{
  "time": "2021-10-06 21:34:53.214782000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "example.com.",
    "rrclass": "IN",
    "rrtype": "SOA",
    "rdata": [
      "hidden-master.example.com. hostmaster.example.com. 2018032701 30 30 86400 300"
    ]
  }
}
#
# MX records. Used to verify MX target names are indexed.
#
{
  "time": "2021-10-06 21:34:53.214790000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "example.com.",
    "rrclass": "IN",
    "rrtype": "MX",
    "rdata": [
      "10 mail.example.com.",
      "20 mail2.example.com."
    ]
  }
}
#
# A records. Used to test rdata address lookups,
# including prefix and range.
#
{
  "time": "2021-10-06 21:34:53.214798000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "www.example.com.",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "198.51.100.3",
      "198.51.100.4"
    ]
  }
}
#
# AAAA records. Used to test rdata address lookups,
# including prefix and range.
#
{
  "time": "2021-10-06 21:34:53.214805000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "www.example.com.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "2001:db8::1",
      "2001:db8::2"
    ]
  }
}
#
# SRV record. Used to verify SRV record slicing and
# rdata name indexing.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "example.com.",
    "rrname": "_ldap._tcp.example.com.",
    "rrclass": "IN",
    "rrtype": "SRV",
    "rdata": [
      "10 1 389 ldap.example.com."
    ]
  }
}

# -----------------
# next_ip test data
# -----------------
#
# These will generate rdata entries with address 192.168.1.1
# and 192.168.1.2, as well as a number of IPv6 addresses
# whose rdata encoding matches the IPv4 address rdata encodings
# for various prefix lengths.
#
# Exercise search for A 192.168.1.0/24 prefix, with
# a number of IPv6 addresses to appear in the initial
# search results.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "a.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "192.168.1.1"
    ]
  }
}
#
# Same address, longer owner TLD to sort after
# record with "." owner.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip",
    "rrname": "a.next_ip",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "192.168.1.1"
    ]
  }
}
#
# Short rrname: "\x07next_ip\x00" is exactly 9 bytes
# so that 4 IPv4 address bytes + 1 byte rrtype +
# 9 byte owner name + 2 byte rdata length exactly fills
# 16 bytes.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.",
    "rrname": "next_ip.",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "192.168.1.1"
    ]
  }
}
#
# Next address up, to sort after record with
# invalid first "label"
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "b.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "192.168.1.2"
    ]
  }
}
#
# All-ones A record. The coresponding rdata
# record will sort after the AAAA rdata
# record for ffff:ffff:0100::, due to the latter's
# trailing zeros.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "c.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "A",
    "rdata": [
      "255.255.255.255"
    ]
  }
}
#
# The rdata AAAA record below matches the A rdata
# record 192.168.1.1 for four bytes, followed by zeroes.
# Tests original version of skip ahead logic in releases
# predating this test.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-0.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# rdata record through the rrtype, followed by zeroes.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-2.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0100::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# record through the rrtype and includes an
# rdata length, followed by zeroes. This will
# sort before the A record, and should be skipped.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-3.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0100:0400::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# record through the rrtype and includes a
# label for "com", which should sort before the
# above A record's "dom".
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-4.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0103:636f:6d00::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# record through the rrtype and includes a
# label for "dom", which should be skipped by
# incrementing the terminal empty label.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-5.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0103:646f:6d00::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# record through the rrtype and includes a
# label for "dom", with an overly-long label replacing
# the terminal empty label.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-6.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0103:646f:6d20::"
    ]
  }
}
#
# This rdata AAAA record matches the 192.168.1.1 A
# record through the rrtype and includes a
# label for "dom", with an invalid label replacing
# the terminal empty label.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-7.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "c0a8:0101:0103:646f:6d80::"
    ]
  }
}
#
# This AAAA record's rdata entry encoding will resemble
# an all-ones A record's encoding up to the rrtype, and
# sort before the all-ones A record due to its trailing
# zeroes.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-8.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "ffff:ffff:0100::"
    ]
  }
}
#
# This AAAA record's rdata entry encoding will resemble
# an all-ones A record's encoding up to the rrtype, but
# is followed by an invalid label byte. This will test
# incrementing the all-ones IP address, which should end
# the iteration.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.dom.",
    "rrname": "aaaa-8.next_ip.dom.",
    "rrclass": "IN",
    "rrtype": "AAAA",
    "rdata": [
      "ffff:ffff:01ff::"
    ]
  }
}
#
# Short record test. Rdata entry must be
# less than 1 + 16 + 1 => 19 bytes in length,
# including 1 type byte and 2 byte rdlen.
# 19 - 3 = 16, "next_ip." = 9 bytes, giving
# 5 bytes to work with. We need to match
# "c0 a8 01" as the first three bytes for
# the IPv6 prefix search.
#
{
  "time": "2021-10-06 21:34:53.214812000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "next_ip.",
    "rrname": "next_ip.",
    "rrclass": "IN",
    "rrtype": "TYPE127",
    "rdata": [
      "\\\\# 03 c0 a8 01"
    ]
  }
}
# Simple NS record. Used to test rrset/rdata single-label wildcard search
#
{
  "time": "2021-10-06 21:34:53.214684000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "sl.dom.",
    "rrname": "alpha.sl.dom.",
    "rrclass": "IN",
    "rrtype": "NS",
    "rdata": [
      "ns1.sl.com.",
      "ns2.sl.dom.",
      "ns4.sub4.sl.com."
    ]
  }
}
# Simple NS record. Used to test rrset/rdata single-label wildcard search
#
{
  "time": "2021-10-06 21:34:53.214684000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "sl.dom.",
    "rrname": "alpha.sl.top.dom.",
    "rrclass": "IN",
    "rrtype": "NS",
    "rdata": [
      "ns1.sl.",
      "ns1.sl.top.dom."
    ]
  }
}
# Simple NS record. Used to test rrset/rdata single-label wildcard search
#
{
  "time": "2021-10-06 21:34:53.214684000",
  "vname": "SIE",
  "mname": "dnsdedupe",
  "message": {
    "type": "EXPIRATION",
    "count": 1,
    "time_first": "2018-03-27 10:43:28",
    "time_last": "2018-03-27 10:43:28",
    "bailiwick": "sl.dom.",
    "rrname": "alpha.beta.sl.dom.",
    "rrclass": "IN",
    "rrtype": "NS",
    "rdata": [
      "ns3.sub3.sl.dom."
    ]
  }
}
EOF
